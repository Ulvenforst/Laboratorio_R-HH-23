datos <- read.table("BD_huella.txt", header = TRUE, dec =".")
datos <- read.table("BD_huella.txt", header = TRUE, dec ="")
datos <- read.table("BD_huella.txt", header = TRUE)
datos <- read.table("BD_huella.txt", header = TRUE)
datos <- read.table("BD_huella.txt", header = TRUE)
datos <- read.table("BD_huella.txt", header = TRUE)
datos <- read.table("BD_huella.txt", header = TRUE, dec =FALSE)
datos <- read.table("BD_huella.txt", header = TRUE, dec =";")
datos <- read.table("BD_huella.txt", header = TRUE, dec =";")
datos <- read.table("BD_huella.txt", header = TRUE, sep = "\t")
View(datos)
names(datos) #nombres de las varibles en la DB
str(datos) #indica el tipo de variabe
head(datos) # muestra las primeras lineas de la DB
# Supongamos que tienes un data frame llamado df y la columna genero
datos$genero_numerico <- ifelse(datos$genero == "masculino", 1,
ifelse(ddatos$genero == "femenino", 2, NA))
datos$genero_numerico <- ifelse(datos$genero == "masculino", 1,
ifelse(ddatos$genero == "femenino", 2))
datos$genero_numerico <- ifelse(datos$genero == "masculino", 1,
ifelse(datos$genero == "femenino", 2))
datos$genero_numerico <- ifelse(datos$genero == "masculino", 1,
ifelse(datos$genero == "femenino", 2, NA))
datos$genero_numerico <- ifelse(datos$genero == "masculino", 1,
ifelse(datos$genero == "femenino", 2, NA))
datos$genero_numerico <- ifelse(datos$genero == "masculino", 1,
ifelse(datos$genero == "femenino", 2, NA))
atos$genero <- tolower(datos$genero)
datos$genero <- tolower(datos$genero)
# Reemplazar los valores según las condiciones
datos$genero[datos$genero == "masculino"] <- 1
datos$genero[datos$genero == "femenino"] <- 2
datos$genero_numerico <- NULL
datos$genero <- tolower(datos$genero)
# Reemplazar los valores según las condiciones
datos$genero[datos$genero == "femenino"] <- 1
datos$genero[datos$genero == "masculino"] <- 2
## Limpieza de datos -> cambiar zona
datos$zona <- tolower(datos$zona)
# Reemplazar los valores según las condiciones
datos$zona[datos$zona == "urbano"] <- 1
datos$zona[datos$zona == "rural"] <- 2
View(datos)
View(datos)
datos <- read.table("BD_huella.txt", header = TRUE, sep = "\t")
View(datos)
## Limpieza de datos -> cambiar genero
datos$genero <- tolower(datos$genero)
# Reemplazar los valores según las condiciones
datos$genero[datos$genero == "femenino"] <- 1
datos$genero[datos$genero == "masculino"] <- 2
## Limpieza de datos -> cambiar zona
datos$zona <- tolower(datos$zona)
# Reemplazar los valores según las condiciones
datos$zona[datos$zona == "urbano"] <- 1
datos$zona[datos$zona == "rural"] <- 2
## Limpieza de datos -> cambiar grado
datos$grado <- tolower(datos$grado)
# Reemplazar los valores según las condiciones
datos$grado[datos$grado == "sexto"] <- 6
datos$grado[datos$grado == "septimo"] <- 7
datos$grado[datos$grado == "octavo"] <- 8
datos$grado[datos$grado == "noveno"] <- 9
datos$grado[datos$grado == "decimo"] <- 10
datos$grado[datos$grado == "once"] <- 11
datos.mean(HDD)
datos.HDD.mean()
datos.HHD.mean()
datos.mean(HHD)
datos.mean(HHD)
media_HDD <- mean(datos$HHD, na.rm = TRUE)
datos$HHD[is.na(datos$HHD)] <- media_HDD
media_HHD <- mean(datos$HHD, na.rm = TRUE)
datos$HHD[is.na(datos$HHD)] <- media_HHD
media_HHI <- mean(datos$HHI, na.rm = TRUE)
datos$HHI[is.na(datos$HHI)] <- media_HHI
print(media_HDD)
print(media_HHI)
media_perhog <- mean(datos$per.hog, na.rm = TRUE)
print(media_perhog)
datos <- read.table("BD_huella.txt", header = TRUE, sep = "\t")
View(datos)
## Limpieza de datos -> cambiar genero
datos$genero <- tolower(datos$genero)
# Reemplazar los valores según las condiciones
datos$genero[datos$genero == "femenino"] <- 1
datos$genero[datos$genero == "masculino"] <- 2
## Limpieza de datos -> cambiar zona
datos$zona <- tolower(datos$zona)
# Reemplazar los valores según las condiciones
datos$zona[datos$zona == "urbano"] <- 1
datos$zona[datos$zona == "rural"] <- 2
## Limpieza de datos -> cambiar grado
datos$grado <- tolower(datos$grado)
# Reemplazar los valores según las condiciones
datos$grado[datos$grado == "sexto"] <- 6
datos$grado[datos$grado == "septimo"] <- 7
datos$grado[datos$grado == "octavo"] <- 8
datos$grado[datos$grado == "noveno"] <- 9
datos$grado[datos$grado == "decimo"] <- 10
datos$grado[datos$grado == "once"] <- 11
## Voy a aplicar un modelo de regresion lineal para HHI
# 1.1 Entrenamiento y pruebas
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.8*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento]
## Voy a aplicar un modelo de regresion lineal para HHI
# 1.1 Entrenamiento y pruebas
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.8*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento, ]
datos_prueba <- datos[-indice_entrenamiento, ]
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
## Voy a aplicar un modelo de regresion lineal para HHI
# 1.1 Entrenamiento y pruebas
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.8*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento, ]
datos_prueba <- datos[-indice_entrenamiento, ]
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
View(datos_prueba)
View(datos_entrenamiento)
View(modelo)
View(resultados)
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.9*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento, ]
datos_prueba <- datos[-indice_entrenamiento, ]
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
## Voy a aplicar un modelo de regresion lineal para HHI
# 1.1 Entrenamiento y pruebas
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.5*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento, ]
datos_prueba <- datos[-indice_entrenamiento, ]
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
reglas_comp_HHD <- c("Uso.baño" = "baño",
"Riego.jardin" = "jardin",
"Uso.cocina" = "cocina",
"Lavado.ropa" = "ropa")
datos <- datos %>%
mutate(comp_HHD = recode(comp_HHD, !!!reglas_comp_HHD, .default = as.character))
library(dplyr)
install.packages("dplyr")
library(dplyr)
#Columna comp_HDD
reglas_comp_HHD <- c("Uso.baño" = "baño",
"Riego.jardin" = "jardin",
"Uso.cocina" = "cocina",
"Lavado.ropa" = "ropa")
datos <- datos %>%
mutate(comp_HHD = recode(comp_HHD, !!!reglas_comp_HHD, .default = as.character))
reglas_comp_HHD <- c("Uso.baño" = "baño",
"Riego.jardin" = "jardin",
"Uso.cocina" = "cocina",
"Lavado.ropa" = "ropa")
datos <- datos %>%
mutate(comp_HHD = case_when(
comp_HHD %in% names(reglas_comp_HHD) ~ reglas_comp_HHD[comp_HHD],
TRUE ~ as.character(comp_HHD)
))
reglas_comp_HHD <- c("Uso.baño" = "Baño",
"Riego.jardin" = "Jardin",
"Uso.cocina" = "Cocina",
"Lavado.ropa" = "Ropa")
datos <- datos %>%
mutate(comp_HHD = case_when(
comp_HHD %in% names(reglas_comp_HHD) ~ reglas_comp_HHD[comp_HHD],
TRUE ~ as.character(comp_HHD)
))
reglas_comp_HHD <- c("uso.baño" = "baño",
"riego.jardin" = "jardin",
"uso.cocina" = "cocina",
"lavado.ropa" = "ropa")
datos <- datos %>%
mutate(comp_HHD = tolower(comp_HHD)) %>%
mutate(comp_HHD = case_when(
comp_HHD %in% names(reglas_comp_HHD) ~ reglas_comp_HHD[comp_HHD],
TRUE ~ as.character(comp_HHD)
))
reglas_comp_HHD <- c("uso.baño" = "Baño",
"riego.jardin" = "Jardin",
"uso.cocina" = "Cocina",
"lavado.ropa" = "Ropa")
datos <- datos %>%
mutate(comp_HHD = tolower(comp_HHD)) %>%
mutate(comp_HHD = gsub("_", ".", comp_HHD)) %>%
mutate(comp_HHD = case_when(
comp_HHD %in% names(reglas_comp_HHD) ~ reglas_comp_HHD[comp_HHD],
TRUE ~ as.character(comp_HHD)
))
reglas_comp_HHD <- c("uso.baño" = "baño",
"riego.jardin" = "jardin",
"uso.cocina" = "cocina",
"lavado.ropa" = "ropa")
datos <- datos %>%
mutate(comp_HHD = tolower(comp_HHD)) %>%
mutate(comp_HHD = gsub("_", ".", comp_HHD)) %>%
mutate(comp_HHD = case_when(
comp_HHD %in% names(reglas_comp_HHD) ~ reglas_comp_HHD[comp_HHD],
TRUE ~ as.character(comp_HHD)
))
reglas_comp_HHI <- c("carne" = "carne",
"Fruta" = "Fruta",
"café" = "café")
datos <- datos %>%
mutate(comp_HHI = recode(comp_HHI, !!!reglas_comp_HHI, .default = as.character))
reglas_comp_HHI <- c("carne" = "carne",
"fruta" = "fruta",
"café" = "café")
datos <- datos %>%
mutate(comp_HHI = tolower(comp_HHI)) %>%
mutate(comp_HHI = case_when(
comp_HHI %in% names(reglas_comp_HHI) ~ reglas_comp_HHI[comp_HHI],
TRUE ~ as.character(comp_HHI)
))
datos$genero <- factor(datos$genero)
datos$zona <- factor(datos$zona)
datos$grado <- factor(datos$grado)
modelo <- lm(per.hog ~ 1, data = datos)
summary(modelo)
datos$per.hog_pred <- predict(modelo, newdata = datos)
View(modelo)
## Modelo de regresion lineal para per.hog
modelo <- lm(per.hog ~ 1, data = datos)
summary(modelo)
datos$per.hog_pred <- predict(modelo, newdata = datos)
# Rellena los valores NA en 'per.hog' con las predicciones
datos$per.hog[is.na(datos$per.hog)] <- datos$per.hog_pred[is.na(datos$per.hog)]
datos <- read.table("BD_huella.txt", header = TRUE, sep = "\t")
## Limpieza de datos -> cambiar genero
datos$genero <- tolower(datos$genero)
# Reemplazar los valores según las condiciones
datos$genero[datos$genero == "femenino"] <- 1
datos$genero[datos$genero == "masculino"] <- 2
## Limpieza de datos -> cambiar zona
datos$zona <- tolower(datos$zona)
# Reemplazar los valores según las condiciones
datos$zona[datos$zona == "urbano"] <- 1
datos$zona[datos$zona == "rural"] <- 2
## Limpieza de datos -> cambiar grado
datos$grado <- tolower(datos$grado)
# Reemplazar los valores según las condiciones
datos$grado[datos$grado == "sexto"] <- 6
datos$grado[datos$grado == "septimo"] <- 7
datos$grado[datos$grado == "octavo"] <- 8
datos$grado[datos$grado == "noveno"] <- 9
datos$grado[datos$grado == "decimo"] <- 10
datos$grado[datos$grado == "once"] <- 11
## Limpieza de datos -> cambiar a factores
datos$genero <- factor(datos$genero)
datos$zona <- factor(datos$zona)
datos$grado <- factor(datos$grado)
reglas_comp_HHD <- c("uso.baño" = "baño",
"riego.jardin" = "jardin",
"uso.cocina" = "cocina",
"lavado.ropa" = "ropa")
datos <- datos %>%
mutate(comp_HHD = tolower(comp_HHD)) %>%
mutate(comp_HHD = gsub("_", ".", comp_HHD)) %>%
mutate(comp_HHD = case_when(
comp_HHD %in% names(reglas_comp_HHD) ~ reglas_comp_HHD[comp_HHD],
TRUE ~ as.character(comp_HHD)
))
#Columna comp_HHI
reglas_comp_HHI <- c("carne" = "carne",
"fruta" = "fruta",
"café" = "café")
datos <- datos %>%
mutate(comp_HHI = tolower(comp_HHI)) %>%
mutate(comp_HHI = case_when(
comp_HHI %in% names(reglas_comp_HHI) ~ reglas_comp_HHI[comp_HHI],
TRUE ~ as.character(comp_HHI)
))
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
# 1.4 remplazar nulos
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
## Limpieza de datos -> cambiar N/A por media
media_HHD <- mean(datos$HHD, na.rm = TRUE)
datos$HHD[is.na(datos$HHD)] <- media_HHD
print(media_HDD)
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
# 1.4 remplazar nulos
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
datos$comp_HHI <- factor(datos$comp_HHI)
## Voy a aplicar un modelo de regresion lineal para HHI
# 1.1 Entrenamiento y pruebas
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.8*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento, ]
datos_prueba <- datos[-indice_entrenamiento, ]
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
# 1.4 remplazar nulos
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
# 1.1 Entrenamiento y pruebas
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.8*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento, ]
datos_prueba <- datos[-indice_entrenamiento, ]
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
# 1.4 remplazar nulos
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
datos$comp_HHD <- factor(datos$comp_HHD)
# 1.1 Entrenamiento y pruebas
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.8*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento, ]
datos_prueba <- datos[-indice_entrenamiento, ]
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
# 1.4 remplazar nulos
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
columnas_categoricas <- c("comp_HHD")
datos_prueba[columnas_categoricas] <- lapply(datos_prueba[columnas_categoricas], function(x) factor(x, levels = levels(datos_entrenamiento[[x]])))
columnas_categoricas <- c("comp_HHD")
datos_prueba[columnas_categoricas] <- lapply(columnas_categoricas, function(x) factor(datos_prueba[[x]], levels = levels(datos_entrenamiento[[x]])))
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
## Voy a aplicar un modelo de regresion lineal para HHI
# 1.1 Entrenamiento y pruebas
set.seed(123)
indice_entrenamiento <- sample(1:nrow(datos), 0.8*nrow(datos))
datos_entrenamiento <- datos[indice_entrenamiento, ]
datos_prueba <- datos[-indice_entrenamiento, ]
# 1.2 Cinstruir el modelo de regresion lineal
modelo <- lm(HHI ~ ., data = datos_entrenamiento)
# 1.3 Predicciones en el conjunto de prueba
predicciones <- predict(modelo, newdata=datos_prueba)
# Revision del modelo
resultados <- data.frame(Real = datos_prueba$HHI, Predicciones = predicciones)
print(resultados)
# 1.4 remplazar nulos
columnas_categoricas <- c("comp_HHD")
datos_prueba[columnas_categoricas] <- lapply(columnas_categoricas, function(x) factor(datos_prueba[[x]], levels = levels(datos_entrenamiento[[x]])))
datos$HHI[is.na(datos$HHI)] <- predict(modelo, newdata = datos[is.na(datos$HHI), ])
git status
